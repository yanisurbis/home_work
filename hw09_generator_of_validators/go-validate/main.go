package main

import (
	"fmt"
	"go/ast"
	"go/parser"
	"go/token"
)

func parseAST() {
	fs := token.NewFileSet()
	//os.Getenv("GOFILE")
	astData, _ := parser.ParseFile(fs, "models/models.go", nil, 0)
	//println(astData)
	ast.Inspect(astData, func(x ast.Node) bool {
		typeSpec, ok := x.(*ast.TypeSpec)

		if !ok {
			return true
		}

		structSpec, ok := typeSpec.Type.(*ast.StructType)

		if !ok {
			return true
		}

		fmt.Println(typeSpec.Name)

		for _, field := range structSpec.Fields.List {
			//fmt.Println(field.Type)
			//fmt.Println(field.Names)
			fmt.Println(field.Tag)
		}

		return false
	})
}

func main() {
//	f, _ := os.Create("models/models_validation_generated.go")
//	f.WriteString(`
//// Code generated by cool go-validate tool; DO NOT EDIT.
//package models
//
//func (u User) Validate() ([]ValidationError, error) {
//	return nil, nil
//}
//`)
//	f.Close()
	parseAST()
}
